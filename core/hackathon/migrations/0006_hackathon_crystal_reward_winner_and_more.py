# Generated by Django 5.1.6 on 2025-03-05 08:51

import django.core.files.storage
import django.core.validators
import django.db.models.deletion
import hackathon.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hackathon', '0005_tag_hackathon_participants_count_and_more'),
        ('user', '0003_user_level_user_xp'),
    ]

    operations = [
        migrations.AddField(
            model_name='hackathon',
            name='crystal_reward_winner',
            field=models.PositiveIntegerField(default=100),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='enable_public_voting',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='judges',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='location',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='max_team_size',
            field=models.PositiveIntegerField(default=4),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_hackathons', to='user.user'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='participation_type',
            field=models.CharField(choices=[('solo', 'Индивидуальное'), ('team', 'Командное'), ('both', 'Оба варианта')], default='both', max_length=10),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='program',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='rules',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='show_solutions_after_deadline',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='solo_participants',
            field=models.ManyToManyField(blank=True, related_name='solo_hackathons', to='user.user'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='submission_deadline',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='xp_reward_participation',
            field=models.PositiveIntegerField(default=50),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='xp_reward_winner',
            field=models.PositiveIntegerField(default=200),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='image',
            field=models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/static/img/hackathon_img', location='/Users/erkebulanmyrzabek/hackathonplatform/core/static/img/hackathon_img'), upload_to=hackathon.models.hackathon_image_path),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('answer', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='hackathon.hackathon')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LiveStream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livestreams', to='hackathon.hackathon')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_members', models.PositiveIntegerField(default=4)),
                ('join_code', models.CharField(editable=False, max_length=8, unique=True)),
                ('status', models.CharField(choices=[('open', 'Открытая'), ('closed', 'Закрытая')], default='open', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='hackathon.hackathon')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_teams', to='user.user')),
                ('members', models.ManyToManyField(related_name='teams', to='user.user')),
            ],
        ),
        migrations.AddField(
            model_name='prizeplaces',
            name='winner_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hackathon.team'),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('task_description', models.TextField()),
                ('max_participants', models.PositiveIntegerField(default=0)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='hackathon.hackathon')),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='track',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='hackathon.track'),
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_url', models.URLField()),
                ('presentation_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Отправлено'), ('reviewed', 'Проверено')], default='draft', max_length=10)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='hackathon.hackathon')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_solutions', to='user.user')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solo_solutions', to='user.user')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='hackathon.team')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solutions', to='hackathon.track')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='user.user')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='hackathon.solution')),
            ],
            options={
                'unique_together': {('solution', 'reviewer')},
            },
        ),
    ]
