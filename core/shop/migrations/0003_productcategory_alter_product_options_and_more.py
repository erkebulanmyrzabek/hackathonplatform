# Generated by Django 5.1.6 on 2025-03-05 08:51

import django.core.files.storage
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0002_alter_product_image'),
        ('user', '0004_achievement_skill_user_avatar_user_bio_user_email_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'verbose_name': 'Товар', 'verbose_name_plural': 'Товары'},
        ),
        migrations.AddField(
            model_name='product',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='is_available',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='product',
            name='premium_duration_days',
            field=models.PositiveIntegerField(default=30, help_text='Длительность премиум-статуса в днях (только для премиум-товаров)'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.CharField(choices=[('physical', 'Физический товар'), ('digital', 'Цифровой товар'), ('premium', 'Премиум-статус')], default='physical', max_length=20),
        ),
        migrations.AddField(
            model_name='product',
            name='stock',
            field=models.PositiveIntegerField(default=0, help_text='0 означает неограниченное количество'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='image',
            field=models.ImageField(storage=django.core.files.storage.FileSystemStorage(base_url='/static/img/product_img', location='/Users/erkebulanmyrzabek/hackathonplatform/core/static/img/product_img'), upload_to='product_images/'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.PositiveIntegerField(help_text='Цена в кристаллах'),
        ),
        migrations.CreateModel(
            name='DigitalAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='digital_assets/')),
                ('price', models.PositiveIntegerField(help_text='Цена в кристаллах')),
                ('asset_type', models.CharField(help_text='Тип цифрового актива (аватар, фон, значок и т.д.)', max_length=50)),
                ('users', models.ManyToManyField(blank=True, related_name='digital_assets', to='user.user')),
            ],
            options={
                'verbose_name': 'Цифровой актив',
                'verbose_name_plural': 'Цифровые активы',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.productcategory'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_price', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'В обработке'), ('completed', 'Завершена'), ('cancelled', 'Отменена'), ('refunded', 'Возвращена')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shipping_address', models.TextField(blank=True, help_text='Только для физических товаров', null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='user.user')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'ordering': ['-created_at'],
            },
        ),
    ]
